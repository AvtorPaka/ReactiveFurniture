services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        TARGETARCH: ${BUILD_ARCH}
    platform: ${BUILD_PLATFORM}
    container_name: rf-backend-api
    image: rf.backend:dev
    restart: always
    env_file:
      - ./.env
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      # Dockerfile build optimization
      - DOTNET_EnableWriteXorExecute = 0
      - DOTNET_NUGET_SIGNATURE_VERIFICATION = false
    networks:
      - rf-network
    depends_on:
      - database
    ports:
      - ${API_PORT}:8080
      
  database:
    image: postgres:latest
    container_name: rf-pg-container
    restart: always
    shm_size: 128mb
    env_file:
      - ./.env
    environment:
      POSTGRES_DB: ${PG_DB}
      POSTGRES_USER: ${PG_USER}
      POSTGRES_PASSWORD: ${PG_PSWD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - pg-data:/var/lib/postgresql/data/pgdata
    networks:
      - rf-network
    ports:
      - ${PG_PORT}:5432
      
      
volumes:
  pg-data:
    driver: local

networks:
  rf-network:
    driver: bridge